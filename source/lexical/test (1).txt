/*正确标志符*/
int faf, _faf, _154faw;
/*非法标识符*/
154_falhg

/*正确算术运算符*/
+
-
*
/
++
--
+=
-=
*=
/=
%
=
/*错误算术运算符*/
+-
**

/*正确关系运算符*/
<
>
>=
<=
!=
==
/*错误关系运算符*/
>>
=<
!>

/*正确逻辑运算符*/
&&
||
!
/*错误逻辑运算符*/
&
|

/*正确界符*/
{}()[]:;,?
/*错误界符*/
$

/* 三种无符号整数 */
/* 浮点数和科学计数法 */
.14
14.
3e+-2

/* 字符常数和字符串常数 */
'''
'“'

/* 注释 */
/* 右引号’ */
/* comment*/ */

/* 三种无符号整数 */
0
1
1357
013
0724
094
0x19af
0X2B63
0x2g

/* 浮点数和科学计数法 */
1.0
0.1
0.0
3.14
07.25
2e8
0.27E+3
276e-7

/* 字符常数和字符串常数 */
'3'
'a'
'Z'
'+'
'('
"string"
"I'am a S_{tring]"
"我是字符串"

/* 注释 */
/* I'm a comment */
/* (我是]*注/释* */

/*完整程序测试*/
int[2][4] h;    /*多维数组的声明*/
m +=10;    /*算术运算符*/
z *= 20;
if (!(m >= 15 && z < 20));    /*关系运算符和逻辑运算符*/
while(h[0][0] == 20){h[0][1]};    /*界符*/
int m,z=0x12;   /*连续声明，赋值，8进制、16进制*/
m = 2+3*4;      /*赋值，生成三地址指令时，考虑优先级*/
char c= 'a';	/*字符型声明，识别字符常数*/	
real b = 1;     /*浮点型声明，自动类型转化*/
int[3] a;       /*数组声明*/
a[0] = 2;       /*数组的赋值和引用*/
switch(m){	/*switch语句的识别和应用*/
  case 1:
  m = m +1;
  case 2:
  m = m + 3;
  default:
  m = m +6;
}
int i;
for(i = 0;i<10;i++){  /*for语句*/
  m = m+2;
}
record stack{    /*记录的声明，这里声明了一个栈结构*/
  int num;
  char value;
}
/*过程声明，声明一个返回值为int的求和函数*/
proc int getSum(int x,int y){
   int j = x;
   int k = y;
   return j+k;
}
call getSum(1,2);    /*函数调用*/
char n = 'a ;    /*字符少了个分号*/
proc int addSum（int x,int y){   /*使用了中文的括号
  char c;
  return c;	
}